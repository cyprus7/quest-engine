version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: quest-engine-api:latest
    expose:
      - "8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      QUEST_ENGINE_API_KEY: "${QUEST_ENGINE_API_KEY:?ENV QUEST_ENGINE_API_KEY not found}"
    depends_on: []
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.quest-api.rule=PathPrefix(`/`)"
      - "traefik.http.routers.quest-api.entrypoints=web"
      - "traefik.http.routers.quest-api.priority=1"
      - "traefik.http.services.quest-api.loadbalancer.server.port=8080"
    restart: unless-stopped
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.watch=true"
      - "--providers.docker.swarmMode=false"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--log.level=DEBUG"
    ports:
      - "8080:80"
      - "8081:8080"  # traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    restart: unless-stopped
    container_name: traefik
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/api/http/routers >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  web:
    driver: bridge
